		2014-8-19 14:41:44
		C++标准程序库中的通用工具
			1.	几种通用型别(general types)
			2.	一些重要的C函数
			3.	数值极值(numeric limits)

1.	pair	他在结构中定义, 而不是一个类, 所以他的数据方法都是public的, C++标准程序库中凡是用到"必须返回两个值"的函数, 都会利用pair对象;
2.	calss auto_ptr	"一种"智能型指针(有好多智能型指针, 他是其中一个), 帮助程序员防止"被异常抛出时发生资源泄露";
		(1)	基于程序员的编程体验和BOOST库提供的更精致的解决方案, C++11摒弃了auto_ptr, 新增了三种只能指针: unique_ptr, shared_ptr, weak_ptr
		(2) 智能指针背后的思想: 不管是"忘记了"释放分配的内存还是异常导致的内存分配问题, 在函数结束后都会删除栈中的本地变量, 如果指针是一个对象的话, 就可以在析构函数中释放它指向的堆内存中的数据, 这样就实现了智能指针...
		(3)	注意: 不要把非堆内存地址传给智能指针, 智能指针的复制转换构造函数是explicit的;
		(4) 关于防止多个智能指针删除同一个堆内存多次的策略:
			1. 定义赋值运算符, 执行深复制;
			2. 建立所有权(ownership)概念, 对于特定的对象, 只有一个智能指针可以拥有它, 只有拥有对象的智能指针的析构函数能够删除该对象.	 赋值操作会转让所有权.	这个是auto_ptr和unique_ptr的策略, 但是unique_ptr的策略更严格;	注意(缺陷): 失去所有权意味着将不再指向堆中的特定内存;
			3. 创建智能更高的指针, 跟踪引用特定对象的智能指针数, 这称为引用计数, 仅当最后一个指针对象过期的时候, 才调用delete, 这是shared_ptr的策略;