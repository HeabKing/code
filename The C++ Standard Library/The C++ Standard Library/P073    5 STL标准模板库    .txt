		创建: 2014-08-20 11:06:20

1.	STL组件 STL Components
	1.	容器 containers		用来管理某类对象的集合
	2.	迭代器 iterators	用来在一个对象群集(collection of object)的元素上进行遍历动作. 每一种容器都提供了自己的迭代器, 而这些迭代器了解该种容器的内部结构. 所有容器的迭代器都提供了一致的接口(operator++, operator*...).		迭代器是算法和容器之间的粘合剂.
	3.	算法 algorithm		用来处理群集内的元素(搜寻, 排序, 修改, 使用...), 通过迭代器的协助, 我们只需撰写一次算法, 就可以将他应用于任意的容器之上, 这是因为所有容器的迭代器都提供了一致的接口; 
2.	容器
	1.	序列式容器 Sequence containers,		可序(ordered)群集, 每个元素有固定位置--取决于插入时机和地点, 和元素无关. vector deque list
	2.	关联式容器 Associative containers,	已序(sorted)群集, 元素位置取决于特定的排序规则, 他们的位置取决于元素值, 和插入的次序 无关. set multiset map multimap
	3.	关联式容器可以被视作特殊的序列式容器, 因为已序群集正是根据某个排序准则排列而成, 缺省情况下以operator<进行比较;
	4.	自动排序带来的主要优点是, 当你搜寻元素时, 可以获得最佳效率, 你也可以放心的使用二分搜寻法;
	5.	通常关联式容器由二叉树实作而来;
	6.	关联式容器: 
		1.	set 每个元素只能出现一次, 不能重复; 
		2.	multiset和set相同, 只不过它允许重复元素;
		3.	map 元素是"实值/键值"所形成的一个对组, 每个元素有一个键, 是排序准则的基础, 每个键只能出现一次, 不允许重复;
		4.	multimap和map相同, 但是允许重复元素, 也就是说multimap允许多个键值相同的元素, multimap可以当作"字典"使用
		5.	关联式容器的迭代器均被声明为指向常量, 因为关联式容器的元素总是根据某个排序规则排好位置的, 改变值意味着它的位置是错的
3.	迭代器
	1.	迭代器是一个"可遍历STL容器内全部或部分元素"的对象, 一个迭代器用来指出容器中的一个特定位置;
	2.	迭代器有遍历复杂数据结构的能力, 其下层运行机制取决于其遍历的数据结构, 因此, 每一种容器型别都有自己的迭代器, 每一种容器都将迭代器以嵌套(nested)的方式定义于内部;
	3.	迭代器分类:
		1.	STL预先定义好的所有容器其迭代器属于:
			1.	双向迭代器(Bidirectional iterator) : 可以双向行进, list, set, multiset, map, multimap
					PS: 只提供operator++, operator--, pos1 == pos2, pos1 != pos2
			2.	随机存取迭代器(Random access iterator) : 不但具备双向迭代器的所有属性, 还具备随机访问能力, vector, deque, string
					PS: 具体的说是他们提供了"迭代器算术运算"(pos + 1, pos1 - pos2, pos1 > pos2, ....)
		2.	其他迭代器 7.2 节 p251
	4.	任何东西, 只要行为类似迭代器, 他就是一个迭代器, 迭代器是一个纯粹抽象概念; 你可以写一些类别, 具备迭代器接口, 但是有着各种不同的行为, 标准库提供的预先定义的特殊迭代器称为迭代器配接器(iterator adapters);
4.	算法 -- 搜寻, 排序, 拷贝, 重新排序, 修改, 数值运算... (详见P000 Algorithms.txt)
5.	迭代器配接器 iterator adapters
	1.	概念:	C++标准程序库提供的预先定义的特殊迭代器
	2.	分类:	
		1.	安插型迭代器 insert iterators	使得算法以安插的方式而非覆写的方式运作, 使用它, 可以解决算法的"目标空间不足"的问题, 它会使目标区间的大小按需成长;
		2.	流迭代器 Stream Iterators		一种用来读写stream的迭代器, 提供了必要的抽象性, 使得键盘的输入像是个群集, 你能从中读取内容;
		3.	逆向迭代器 Reverse Iterators	将递增运算转换成递减运算
6.	将函数作为算法的参数: 算法以数种态度来面对这些辅助函数, 有的视之为可有可无, 有的视之为必要, 可以利用他们来指定搜寻规则, 排序规则或定义某种操作, 以便将容器中的元素转换至另一个容器
7.	判断式, predicate: 返回布尔值的函数, 通常被用来指定排序准则和搜寻准则, 可能有一个或两个操作数
	1.	一元判断式, 在区间中调用一个elem进行比较 find_if()
	2.	二元判断式, 在区间中调用两个elem进行比较 sort()
8.	仿函数: 给算法的函数参数不一定是函数, 也可以是行为类似函数("使用小括号传递参数, 藉以调用每个东西")的对象, 任何东西, 只要行为像个函数, 他就是个函数;
9.	配接器bind2nd() P132 STL库仿函数.cpp