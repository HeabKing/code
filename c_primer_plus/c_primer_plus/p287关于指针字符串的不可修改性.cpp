// 自己总结
// 字符串常量属于静态储存类, 储存在可执行文件的数据段部分, 当程序被加载到内存中的时候, 字符串也被加载到内存中, 被引用的字符串被称为位于静态存储区
// 但是程序运行后才为数组分配储存空间
// 数组初始化是从静态存储区把一个字符串复制给数组, 指针初始化是把字符串的地址复制
// 编译器可能会选择把程序中所有用到统一字符串的位置用一个字符串的拷贝代替, 由于字符数组和字符指针的作用机理将会使得无法使字符指针改变他指向的字符串以保证其他位置的字符串不被改变
#include <stdio.h>
int main(void)
{
	char * ptr = "I am a stack";
	//ptr[0] = 'i'; // 这里将会导致异常终止, 所以这种情况根本无法进行更改字符串, 所以声明的时候应该const char * ptr = "I am a stack";
	printf("I am a stack");
	printf("\n%p %p\n", "I am a stack", ptr);

	// 但是由于数组是得到了字符串常量的一份拷贝 所以它可以改变字符串
	char ar[30] = "I am a stack";
	ar[0] = 'i';
	printf ("I am a stack");
	printf("\n%s\n", ar);

	return 0;
}